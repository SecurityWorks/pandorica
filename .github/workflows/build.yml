name: Rust Build
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: Build ${{ matrix.target }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x86_64, aarch64]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout

      - uses: arduino/setup-protoc@v1
        name: Install protoc
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions-rs/toolchain@v1
        name: Install Rust toolchain
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build (Windows ${{ matrix.arch }})
        if: matrix.os == 'windows-latest'
        run: cargo build --all --release --target ${{ matrix.arch }}-pc-windows-msvc && mv target/release/pandorica.exe target/release/pandorica_windows_${{ matrix.arch }}.exe

      - name: Build (Linux ${{ matrix.arch }})
        if: matrix.os == 'ubuntu-latest'
        run: cargo build --all --release --target ${{ matrix.arch }}-unknown-linux-gnu && strip target/release/pandorica && mv target/release/pandorica target/release/pandorica_linux_${{ matrix.arch }}

      - name: Build (MacOS ${{ matrix.arch }})
        if: matrix.os == 'macos-latest'
        run: cargo build --all --release --target ${{ matrix.arch }}-apple-darwin && strip target/release/pandorica && mv target/release/pandorica target/release/pandorica_macos_${{ matrix.arch }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/pandorica_*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}